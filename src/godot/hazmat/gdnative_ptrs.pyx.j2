cimport cython
from libc.stdint cimport *

from .gdapi cimport *
from .gdextension_interface cimport *


# Temporary variable used to call GDExtension
cdef gd_string_name_t _gdname


##############################################################################
# GDExtension interface functions                                            #
##############################################################################


cdef LoadedGDExtensionInterface pythonscript_gdextension


pythonscript_gdextension.get_godot_version = <void (*)(GDExtensionGodotVersion *)>pythonscript_gdextension_get_proc_address("get_godot_version")
pythonscript_gdextension.mem_alloc = <void *(*)(size_t)>pythonscript_gdextension_get_proc_address("mem_alloc")
pythonscript_gdextension.mem_realloc = <void *(*)(void *, size_t)>pythonscript_gdextension_get_proc_address("mem_realloc")
pythonscript_gdextension.mem_free = <void (*)(void *)>pythonscript_gdextension_get_proc_address("mem_free")
pythonscript_gdextension.print_error = <void (*)(const char *, const char *, const char *, int32_t, GDExtensionBool)>pythonscript_gdextension_get_proc_address("print_error")
pythonscript_gdextension.print_error_with_message = <void (*)(const char *, const char *, const char *, const char *, int32_t, GDExtensionBool)>pythonscript_gdextension_get_proc_address("print_error_with_message")
pythonscript_gdextension.print_warning = <void (*)(const char *, const char *, const char *, int32_t, GDExtensionBool)>pythonscript_gdextension_get_proc_address("print_warning")
pythonscript_gdextension.print_warning_with_message = <void (*)(const char *, const char *, const char *, const char *, int32_t, GDExtensionBool)>pythonscript_gdextension_get_proc_address("print_warning_with_message")
pythonscript_gdextension.print_script_error = <void (*)(const char *, const char *, const char *, int32_t, GDExtensionBool)>pythonscript_gdextension_get_proc_address("print_script_error")
pythonscript_gdextension.print_script_error_with_message = <void (*)(const char *, const char *, const char *, const char *, int32_t, GDExtensionBool)>pythonscript_gdextension_get_proc_address("print_script_error_with_message")
pythonscript_gdextension.get_native_struct_size = <uint64_t (*)(GDExtensionConstStringNamePtr)>pythonscript_gdextension_get_proc_address("get_native_struct_size")
pythonscript_gdextension.variant_new_copy = <void (*)(GDExtensionUninitializedVariantPtr, GDExtensionConstVariantPtr)>pythonscript_gdextension_get_proc_address("variant_new_copy")
pythonscript_gdextension.variant_new_nil = <void (*)(GDExtensionUninitializedVariantPtr)>pythonscript_gdextension_get_proc_address("variant_new_nil")
pythonscript_gdextension.variant_destroy = <void (*)(GDExtensionVariantPtr)>pythonscript_gdextension_get_proc_address("variant_destroy")
pythonscript_gdextension.variant_call = <void (*)(GDExtensionVariantPtr, GDExtensionConstStringNamePtr, const GDExtensionConstVariantPtr *, GDExtensionInt, GDExtensionUninitializedVariantPtr, GDExtensionCallError *)>pythonscript_gdextension_get_proc_address("variant_call")
pythonscript_gdextension.variant_call_static = <void (*)(GDExtensionVariantType, GDExtensionConstStringNamePtr, const GDExtensionConstVariantPtr *, GDExtensionInt, GDExtensionUninitializedVariantPtr, GDExtensionCallError *)>pythonscript_gdextension_get_proc_address("variant_call_static")
pythonscript_gdextension.variant_evaluate = <void (*)(GDExtensionVariantOperator, GDExtensionConstVariantPtr, GDExtensionConstVariantPtr, GDExtensionUninitializedVariantPtr, GDExtensionBool *)>pythonscript_gdextension_get_proc_address("variant_evaluate")
pythonscript_gdextension.variant_set = <void (*)(GDExtensionVariantPtr, GDExtensionConstVariantPtr, GDExtensionConstVariantPtr, GDExtensionBool *)>pythonscript_gdextension_get_proc_address("variant_set")
pythonscript_gdextension.variant_set_named = <void (*)(GDExtensionVariantPtr, GDExtensionConstStringNamePtr, GDExtensionConstVariantPtr, GDExtensionBool *)>pythonscript_gdextension_get_proc_address("variant_set_named")
pythonscript_gdextension.variant_set_keyed = <void (*)(GDExtensionVariantPtr, GDExtensionConstVariantPtr, GDExtensionConstVariantPtr, GDExtensionBool *)>pythonscript_gdextension_get_proc_address("variant_set_keyed")
pythonscript_gdextension.variant_set_indexed = <void (*)(GDExtensionVariantPtr, GDExtensionInt, GDExtensionConstVariantPtr, GDExtensionBool *, GDExtensionBool *)>pythonscript_gdextension_get_proc_address("variant_set_indexed")
pythonscript_gdextension.variant_get = <void (*)(GDExtensionConstVariantPtr, GDExtensionConstVariantPtr, GDExtensionUninitializedVariantPtr, GDExtensionBool *)>pythonscript_gdextension_get_proc_address("variant_get")
pythonscript_gdextension.variant_get_named = <void (*)(GDExtensionConstVariantPtr, GDExtensionConstStringNamePtr, GDExtensionUninitializedVariantPtr, GDExtensionBool *)>pythonscript_gdextension_get_proc_address("variant_get_named")
pythonscript_gdextension.variant_get_keyed = <void (*)(GDExtensionConstVariantPtr, GDExtensionConstVariantPtr, GDExtensionUninitializedVariantPtr, GDExtensionBool *)>pythonscript_gdextension_get_proc_address("variant_get_keyed")
pythonscript_gdextension.variant_get_indexed = <void (*)(GDExtensionConstVariantPtr, GDExtensionInt, GDExtensionUninitializedVariantPtr, GDExtensionBool *, GDExtensionBool *)>pythonscript_gdextension_get_proc_address("variant_get_indexed")
pythonscript_gdextension.variant_iter_init = <GDExtensionBool (*)(GDExtensionConstVariantPtr, GDExtensionUninitializedVariantPtr, GDExtensionBool *)>pythonscript_gdextension_get_proc_address("variant_iter_init")
pythonscript_gdextension.variant_iter_next = <GDExtensionBool (*)(GDExtensionConstVariantPtr, GDExtensionVariantPtr, GDExtensionBool *)>pythonscript_gdextension_get_proc_address("variant_iter_next")
pythonscript_gdextension.variant_iter_get = <void (*)(GDExtensionConstVariantPtr, GDExtensionVariantPtr, GDExtensionUninitializedVariantPtr, GDExtensionBool *)>pythonscript_gdextension_get_proc_address("variant_iter_get")
pythonscript_gdextension.variant_hash = <GDExtensionInt (*)(GDExtensionConstVariantPtr)>pythonscript_gdextension_get_proc_address("variant_hash")
pythonscript_gdextension.variant_recursive_hash = <GDExtensionInt (*)(GDExtensionConstVariantPtr, GDExtensionInt)>pythonscript_gdextension_get_proc_address("variant_recursive_hash")
pythonscript_gdextension.variant_hash_compare = <GDExtensionBool (*)(GDExtensionConstVariantPtr, GDExtensionConstVariantPtr)>pythonscript_gdextension_get_proc_address("variant_hash_compare")
pythonscript_gdextension.variant_booleanize = <GDExtensionBool (*)(GDExtensionConstVariantPtr)>pythonscript_gdextension_get_proc_address("variant_booleanize")
pythonscript_gdextension.variant_duplicate = <void (*)(GDExtensionConstVariantPtr, GDExtensionVariantPtr, GDExtensionBool)>pythonscript_gdextension_get_proc_address("variant_duplicate")
pythonscript_gdextension.variant_stringify = <void (*)(GDExtensionConstVariantPtr, GDExtensionStringPtr)>pythonscript_gdextension_get_proc_address("variant_stringify")
pythonscript_gdextension.variant_get_type = <GDExtensionVariantType (*)(GDExtensionConstVariantPtr)>pythonscript_gdextension_get_proc_address("variant_get_type")
pythonscript_gdextension.variant_has_method = <GDExtensionBool (*)(GDExtensionConstVariantPtr, GDExtensionConstStringNamePtr)>pythonscript_gdextension_get_proc_address("variant_has_method")
pythonscript_gdextension.variant_has_member = <GDExtensionBool (*)(GDExtensionVariantType, GDExtensionConstStringNamePtr)>pythonscript_gdextension_get_proc_address("variant_has_member")
pythonscript_gdextension.variant_has_key = <GDExtensionBool (*)(GDExtensionConstVariantPtr, GDExtensionConstVariantPtr, GDExtensionBool *)>pythonscript_gdextension_get_proc_address("variant_has_key")
pythonscript_gdextension.variant_get_type_name = <void (*)(GDExtensionVariantType, GDExtensionUninitializedStringPtr)>pythonscript_gdextension_get_proc_address("variant_get_type_name")
pythonscript_gdextension.variant_can_convert = <GDExtensionBool (*)(GDExtensionVariantType, GDExtensionVariantType)>pythonscript_gdextension_get_proc_address("variant_can_convert")
pythonscript_gdextension.variant_can_convert_strict = <GDExtensionBool (*)(GDExtensionVariantType, GDExtensionVariantType)>pythonscript_gdextension_get_proc_address("variant_can_convert_strict")
pythonscript_gdextension.get_variant_from_type_constructor = <GDExtensionVariantFromTypeConstructorFunc (*)(GDExtensionVariantType)>pythonscript_gdextension_get_proc_address("get_variant_from_type_constructor")
pythonscript_gdextension.get_variant_to_type_constructor = <GDExtensionTypeFromVariantConstructorFunc (*)(GDExtensionVariantType)>pythonscript_gdextension_get_proc_address("get_variant_to_type_constructor")
pythonscript_gdextension.variant_get_ptr_operator_evaluator = <GDExtensionPtrOperatorEvaluator (*)(GDExtensionVariantOperator, GDExtensionVariantType, GDExtensionVariantType)>pythonscript_gdextension_get_proc_address("variant_get_ptr_operator_evaluator")
pythonscript_gdextension.variant_get_ptr_builtin_method = <GDExtensionPtrBuiltInMethod (*)(GDExtensionVariantType, GDExtensionConstStringNamePtr, GDExtensionInt)>pythonscript_gdextension_get_proc_address("variant_get_ptr_builtin_method")
pythonscript_gdextension.variant_get_ptr_constructor = <GDExtensionPtrConstructor (*)(GDExtensionVariantType, int32_t)>pythonscript_gdextension_get_proc_address("variant_get_ptr_constructor")
pythonscript_gdextension.variant_get_ptr_destructor = <GDExtensionPtrDestructor (*)(GDExtensionVariantType)>pythonscript_gdextension_get_proc_address("variant_get_ptr_destructor")
pythonscript_gdextension.variant_construct = <void (*)(GDExtensionVariantType, GDExtensionUninitializedVariantPtr, const GDExtensionConstVariantPtr *, int32_t, GDExtensionCallError *)>pythonscript_gdextension_get_proc_address("variant_construct")
pythonscript_gdextension.variant_get_ptr_setter = <GDExtensionPtrSetter (*)(GDExtensionVariantType, GDExtensionConstStringNamePtr)>pythonscript_gdextension_get_proc_address("variant_get_ptr_setter")
pythonscript_gdextension.variant_get_ptr_getter = <GDExtensionPtrGetter (*)(GDExtensionVariantType, GDExtensionConstStringNamePtr)>pythonscript_gdextension_get_proc_address("variant_get_ptr_getter")
pythonscript_gdextension.variant_get_ptr_indexed_setter = <GDExtensionPtrIndexedSetter (*)(GDExtensionVariantType)>pythonscript_gdextension_get_proc_address("variant_get_ptr_indexed_setter")
pythonscript_gdextension.variant_get_ptr_indexed_getter = <GDExtensionPtrIndexedGetter (*)(GDExtensionVariantType)>pythonscript_gdextension_get_proc_address("variant_get_ptr_indexed_getter")
pythonscript_gdextension.variant_get_ptr_keyed_setter = <GDExtensionPtrKeyedSetter (*)(GDExtensionVariantType)>pythonscript_gdextension_get_proc_address("variant_get_ptr_keyed_setter")
pythonscript_gdextension.variant_get_ptr_keyed_getter = <GDExtensionPtrKeyedGetter (*)(GDExtensionVariantType)>pythonscript_gdextension_get_proc_address("variant_get_ptr_keyed_getter")
pythonscript_gdextension.variant_get_ptr_keyed_checker = <GDExtensionPtrKeyedChecker (*)(GDExtensionVariantType)>pythonscript_gdextension_get_proc_address("variant_get_ptr_keyed_checker")
pythonscript_gdextension.variant_get_constant_value = <void (*)(GDExtensionVariantType, GDExtensionConstStringNamePtr, GDExtensionUninitializedVariantPtr)>pythonscript_gdextension_get_proc_address("variant_get_constant_value")
pythonscript_gdextension.variant_get_ptr_utility_function = <GDExtensionPtrUtilityFunction (*)(GDExtensionConstStringNamePtr, GDExtensionInt)>pythonscript_gdextension_get_proc_address("variant_get_ptr_utility_function")
pythonscript_gdextension.string_new_with_latin1_chars = <void (*)(GDExtensionUninitializedStringPtr, const char *)>pythonscript_gdextension_get_proc_address("string_new_with_latin1_chars")
pythonscript_gdextension.string_new_with_utf8_chars = <void (*)(GDExtensionUninitializedStringPtr, const char *)>pythonscript_gdextension_get_proc_address("string_new_with_utf8_chars")
pythonscript_gdextension.string_new_with_utf16_chars = <void (*)(GDExtensionUninitializedStringPtr, const char16_t *)>pythonscript_gdextension_get_proc_address("string_new_with_utf16_chars")
pythonscript_gdextension.string_new_with_utf32_chars = <void (*)(GDExtensionUninitializedStringPtr, const char32_t *)>pythonscript_gdextension_get_proc_address("string_new_with_utf32_chars")
pythonscript_gdextension.string_new_with_wide_chars = <void (*)(GDExtensionUninitializedStringPtr, const wchar_t *)>pythonscript_gdextension_get_proc_address("string_new_with_wide_chars")
pythonscript_gdextension.string_new_with_latin1_chars_and_len = <void (*)(GDExtensionUninitializedStringPtr, const char *, GDExtensionInt)>pythonscript_gdextension_get_proc_address("string_new_with_latin1_chars_and_len")
pythonscript_gdextension.string_new_with_utf8_chars_and_len = <void (*)(GDExtensionUninitializedStringPtr, const char *, GDExtensionInt)>pythonscript_gdextension_get_proc_address("string_new_with_utf8_chars_and_len")
pythonscript_gdextension.string_new_with_utf16_chars_and_len = <void (*)(GDExtensionUninitializedStringPtr, const char16_t *, GDExtensionInt)>pythonscript_gdextension_get_proc_address("string_new_with_utf16_chars_and_len")
pythonscript_gdextension.string_new_with_utf32_chars_and_len = <void (*)(GDExtensionUninitializedStringPtr, const char32_t *, GDExtensionInt)>pythonscript_gdextension_get_proc_address("string_new_with_utf32_chars_and_len")
pythonscript_gdextension.string_new_with_wide_chars_and_len = <void (*)(GDExtensionUninitializedStringPtr, const wchar_t *, GDExtensionInt)>pythonscript_gdextension_get_proc_address("string_new_with_wide_chars_and_len")
pythonscript_gdextension.string_to_latin1_chars = <GDExtensionInt (*)(GDExtensionConstStringPtr, char *, GDExtensionInt)>pythonscript_gdextension_get_proc_address("string_to_latin1_chars")
pythonscript_gdextension.string_to_utf8_chars = <GDExtensionInt (*)(GDExtensionConstStringPtr, char *, GDExtensionInt)>pythonscript_gdextension_get_proc_address("string_to_utf8_chars")
pythonscript_gdextension.string_to_utf16_chars = <GDExtensionInt (*)(GDExtensionConstStringPtr, char16_t *, GDExtensionInt)>pythonscript_gdextension_get_proc_address("string_to_utf16_chars")
pythonscript_gdextension.string_to_utf32_chars = <GDExtensionInt (*)(GDExtensionConstStringPtr, char32_t *, GDExtensionInt)>pythonscript_gdextension_get_proc_address("string_to_utf32_chars")
pythonscript_gdextension.string_to_wide_chars = <GDExtensionInt (*)(GDExtensionConstStringPtr, wchar_t *, GDExtensionInt)>pythonscript_gdextension_get_proc_address("string_to_wide_chars")
pythonscript_gdextension.string_operator_index = <char32_t *(*)(GDExtensionStringPtr, GDExtensionInt)>pythonscript_gdextension_get_proc_address("string_operator_index")
pythonscript_gdextension.string_operator_index_const = <const char32_t *(*)(GDExtensionConstStringPtr, GDExtensionInt)>pythonscript_gdextension_get_proc_address("string_operator_index_const")
pythonscript_gdextension.string_operator_plus_eq_string = <void (*)(GDExtensionStringPtr, GDExtensionConstStringPtr)>pythonscript_gdextension_get_proc_address("string_operator_plus_eq_string")
pythonscript_gdextension.string_operator_plus_eq_char = <void (*)(GDExtensionStringPtr, char32_t)>pythonscript_gdextension_get_proc_address("string_operator_plus_eq_char")
pythonscript_gdextension.string_operator_plus_eq_cstr = <void (*)(GDExtensionStringPtr, const char *)>pythonscript_gdextension_get_proc_address("string_operator_plus_eq_cstr")
pythonscript_gdextension.string_operator_plus_eq_wcstr = <void (*)(GDExtensionStringPtr, const wchar_t *)>pythonscript_gdextension_get_proc_address("string_operator_plus_eq_wcstr")
pythonscript_gdextension.string_operator_plus_eq_c32str = <void (*)(GDExtensionStringPtr, const char32_t *)>pythonscript_gdextension_get_proc_address("string_operator_plus_eq_c32str")
pythonscript_gdextension.string_resize = <GDExtensionInt (*)(GDExtensionStringPtr, GDExtensionInt)>pythonscript_gdextension_get_proc_address("string_resize")
pythonscript_gdextension.string_name_new_with_latin1_chars = <void (*)(GDExtensionUninitializedStringNamePtr, const char *, GDExtensionBool)>pythonscript_gdextension_get_proc_address("string_name_new_with_latin1_chars")
pythonscript_gdextension.string_name_new_with_utf8_chars = <void (*)(GDExtensionUninitializedStringNamePtr, const char *)>pythonscript_gdextension_get_proc_address("string_name_new_with_utf8_chars")
pythonscript_gdextension.string_name_new_with_utf8_chars_and_len = <void (*)(GDExtensionUninitializedStringNamePtr, const char *, GDExtensionInt)>pythonscript_gdextension_get_proc_address("string_name_new_with_utf8_chars_and_len")
pythonscript_gdextension.xml_parser_open_buffer = <GDExtensionInt (*)(GDExtensionObjectPtr, const uint8_t *, size_t)>pythonscript_gdextension_get_proc_address("xml_parser_open_buffer")
pythonscript_gdextension.file_access_store_buffer = <void (*)(GDExtensionObjectPtr, const uint8_t *, uint64_t)>pythonscript_gdextension_get_proc_address("file_access_store_buffer")
pythonscript_gdextension.file_access_get_buffer = <uint64_t (*)(GDExtensionConstObjectPtr, uint8_t *, uint64_t)>pythonscript_gdextension_get_proc_address("file_access_get_buffer")
pythonscript_gdextension.worker_thread_pool_add_native_group_task = <int64_t (*)(GDExtensionObjectPtr, void (*)(void *, uint32_t), void *, int, int, GDExtensionBool, GDExtensionConstStringPtr)>pythonscript_gdextension_get_proc_address("worker_thread_pool_add_native_group_task")
pythonscript_gdextension.worker_thread_pool_add_native_task = <int64_t (*)(GDExtensionObjectPtr, void (*)(void *), void *, GDExtensionBool, GDExtensionConstStringPtr)>pythonscript_gdextension_get_proc_address("worker_thread_pool_add_native_task")
pythonscript_gdextension.packed_byte_array_operator_index = <uint8_t *(*)(GDExtensionTypePtr, GDExtensionInt)>pythonscript_gdextension_get_proc_address("packed_byte_array_operator_index")
pythonscript_gdextension.packed_byte_array_operator_index_const = <const uint8_t *(*)(GDExtensionConstTypePtr, GDExtensionInt)>pythonscript_gdextension_get_proc_address("packed_byte_array_operator_index_const")
pythonscript_gdextension.packed_color_array_operator_index = <GDExtensionTypePtr (*)(GDExtensionTypePtr, GDExtensionInt)>pythonscript_gdextension_get_proc_address("packed_color_array_operator_index")
pythonscript_gdextension.packed_color_array_operator_index_const = <GDExtensionTypePtr (*)(GDExtensionConstTypePtr, GDExtensionInt)>pythonscript_gdextension_get_proc_address("packed_color_array_operator_index_const")
pythonscript_gdextension.packed_float32_array_operator_index = <float *(*)(GDExtensionTypePtr, GDExtensionInt)>pythonscript_gdextension_get_proc_address("packed_float32_array_operator_index")
pythonscript_gdextension.packed_float32_array_operator_index_const = <const float *(*)(GDExtensionConstTypePtr, GDExtensionInt)>pythonscript_gdextension_get_proc_address("packed_float32_array_operator_index_const")
pythonscript_gdextension.packed_float64_array_operator_index = <double *(*)(GDExtensionTypePtr, GDExtensionInt)>pythonscript_gdextension_get_proc_address("packed_float64_array_operator_index")
pythonscript_gdextension.packed_float64_array_operator_index_const = <const double *(*)(GDExtensionConstTypePtr, GDExtensionInt)>pythonscript_gdextension_get_proc_address("packed_float64_array_operator_index_const")
pythonscript_gdextension.packed_int32_array_operator_index = <int32_t *(*)(GDExtensionTypePtr, GDExtensionInt)>pythonscript_gdextension_get_proc_address("packed_int32_array_operator_index")
pythonscript_gdextension.packed_int32_array_operator_index_const = <const int32_t *(*)(GDExtensionConstTypePtr, GDExtensionInt)>pythonscript_gdextension_get_proc_address("packed_int32_array_operator_index_const")
pythonscript_gdextension.packed_int64_array_operator_index = <int64_t *(*)(GDExtensionTypePtr, GDExtensionInt)>pythonscript_gdextension_get_proc_address("packed_int64_array_operator_index")
pythonscript_gdextension.packed_int64_array_operator_index_const = <const int64_t *(*)(GDExtensionConstTypePtr, GDExtensionInt)>pythonscript_gdextension_get_proc_address("packed_int64_array_operator_index_const")
pythonscript_gdextension.packed_string_array_operator_index = <GDExtensionStringPtr (*)(GDExtensionTypePtr, GDExtensionInt)>pythonscript_gdextension_get_proc_address("packed_string_array_operator_index")
pythonscript_gdextension.packed_string_array_operator_index_const = <GDExtensionStringPtr (*)(GDExtensionConstTypePtr, GDExtensionInt)>pythonscript_gdextension_get_proc_address("packed_string_array_operator_index_const")
pythonscript_gdextension.packed_vector2_array_operator_index = <GDExtensionTypePtr (*)(GDExtensionTypePtr, GDExtensionInt)>pythonscript_gdextension_get_proc_address("packed_vector2_array_operator_index")
pythonscript_gdextension.packed_vector2_array_operator_index_const = <GDExtensionTypePtr (*)(GDExtensionConstTypePtr, GDExtensionInt)>pythonscript_gdextension_get_proc_address("packed_vector2_array_operator_index_const")
pythonscript_gdextension.packed_vector3_array_operator_index = <GDExtensionTypePtr (*)(GDExtensionTypePtr, GDExtensionInt)>pythonscript_gdextension_get_proc_address("packed_vector3_array_operator_index")
pythonscript_gdextension.packed_vector3_array_operator_index_const = <GDExtensionTypePtr (*)(GDExtensionConstTypePtr, GDExtensionInt)>pythonscript_gdextension_get_proc_address("packed_vector3_array_operator_index_const")
pythonscript_gdextension.array_operator_index = <GDExtensionVariantPtr (*)(GDExtensionTypePtr, GDExtensionInt)>pythonscript_gdextension_get_proc_address("array_operator_index")
pythonscript_gdextension.array_operator_index_const = <GDExtensionVariantPtr (*)(GDExtensionConstTypePtr, GDExtensionInt)>pythonscript_gdextension_get_proc_address("array_operator_index_const")
pythonscript_gdextension.array_ref = <void (*)(GDExtensionTypePtr, GDExtensionConstTypePtr)>pythonscript_gdextension_get_proc_address("array_ref")
pythonscript_gdextension.array_set_typed = <void (*)(GDExtensionTypePtr, GDExtensionVariantType, GDExtensionConstStringNamePtr, GDExtensionConstVariantPtr)>pythonscript_gdextension_get_proc_address("array_set_typed")
pythonscript_gdextension.dictionary_operator_index = <GDExtensionVariantPtr (*)(GDExtensionTypePtr, GDExtensionConstVariantPtr)>pythonscript_gdextension_get_proc_address("dictionary_operator_index")
pythonscript_gdextension.dictionary_operator_index_const = <GDExtensionVariantPtr (*)(GDExtensionConstTypePtr, GDExtensionConstVariantPtr)>pythonscript_gdextension_get_proc_address("dictionary_operator_index_const")
pythonscript_gdextension.object_method_bind_call = <void (*)(GDExtensionMethodBindPtr, GDExtensionObjectPtr, const GDExtensionConstVariantPtr *, GDExtensionInt, GDExtensionUninitializedVariantPtr, GDExtensionCallError *)>pythonscript_gdextension_get_proc_address("object_method_bind_call")
pythonscript_gdextension.object_method_bind_ptrcall = <void (*)(GDExtensionMethodBindPtr, GDExtensionObjectPtr, const GDExtensionConstTypePtr *, GDExtensionTypePtr)>pythonscript_gdextension_get_proc_address("object_method_bind_ptrcall")
pythonscript_gdextension.object_destroy = <void (*)(GDExtensionObjectPtr)>pythonscript_gdextension_get_proc_address("object_destroy")
pythonscript_gdextension.global_get_singleton = <GDExtensionObjectPtr (*)(GDExtensionConstStringNamePtr)>pythonscript_gdextension_get_proc_address("global_get_singleton")
pythonscript_gdextension.object_get_instance_binding = <void *(*)(GDExtensionObjectPtr, void *, const GDExtensionInstanceBindingCallbacks *)>pythonscript_gdextension_get_proc_address("object_get_instance_binding")
pythonscript_gdextension.object_set_instance_binding = <void (*)(GDExtensionObjectPtr, void *, void *, const GDExtensionInstanceBindingCallbacks *)>pythonscript_gdextension_get_proc_address("object_set_instance_binding")
pythonscript_gdextension.object_free_instance_binding = <void (*)(GDExtensionObjectPtr, void *)>pythonscript_gdextension_get_proc_address("object_free_instance_binding")
pythonscript_gdextension.object_set_instance = <void (*)(GDExtensionObjectPtr, GDExtensionConstStringNamePtr, GDExtensionClassInstancePtr)>pythonscript_gdextension_get_proc_address("object_set_instance")
pythonscript_gdextension.object_get_class_name = <GDExtensionBool (*)(GDExtensionConstObjectPtr, GDExtensionClassLibraryPtr, GDExtensionUninitializedStringNamePtr)>pythonscript_gdextension_get_proc_address("object_get_class_name")
pythonscript_gdextension.object_cast_to = <GDExtensionObjectPtr (*)(GDExtensionConstObjectPtr, void *)>pythonscript_gdextension_get_proc_address("object_cast_to")
pythonscript_gdextension.object_get_instance_from_id = <GDExtensionObjectPtr (*)(GDObjectInstanceID)>pythonscript_gdextension_get_proc_address("object_get_instance_from_id")
pythonscript_gdextension.object_get_instance_id = <GDObjectInstanceID (*)(GDExtensionConstObjectPtr)>pythonscript_gdextension_get_proc_address("object_get_instance_id")
pythonscript_gdextension.ref_get_object = <GDExtensionObjectPtr (*)(GDExtensionConstRefPtr)>pythonscript_gdextension_get_proc_address("ref_get_object")
pythonscript_gdextension.ref_set_object = <void (*)(GDExtensionRefPtr, GDExtensionObjectPtr)>pythonscript_gdextension_get_proc_address("ref_set_object")
pythonscript_gdextension.script_instance_create = <GDExtensionScriptInstancePtr (*)(const GDExtensionScriptInstanceInfo *, GDExtensionScriptInstanceDataPtr)>pythonscript_gdextension_get_proc_address("script_instance_create")
pythonscript_gdextension.script_instance_create2 = <GDExtensionScriptInstancePtr (*)(const GDExtensionScriptInstanceInfo2 *, GDExtensionScriptInstanceDataPtr)>pythonscript_gdextension_get_proc_address("script_instance_create2")
pythonscript_gdextension.place_holder_script_instance_create = <GDExtensionScriptInstancePtr (*)(GDExtensionObjectPtr, GDExtensionObjectPtr, GDExtensionObjectPtr)>pythonscript_gdextension_get_proc_address("place_holder_script_instance_create")
pythonscript_gdextension.place_holder_script_instance_update = <void (*)(GDExtensionScriptInstancePtr, GDExtensionConstTypePtr, GDExtensionConstTypePtr)>pythonscript_gdextension_get_proc_address("place_holder_script_instance_update")
pythonscript_gdextension.object_get_script_instance = <GDExtensionScriptInstanceDataPtr (*)(GDExtensionConstObjectPtr, GDExtensionObjectPtr)>pythonscript_gdextension_get_proc_address("object_get_script_instance")
pythonscript_gdextension.callable_custom_create = <void (*)(GDExtensionUninitializedTypePtr, GDExtensionCallableCustomInfo *)>pythonscript_gdextension_get_proc_address("callable_custom_create")
pythonscript_gdextension.callable_custom_get_user_data = <void *(*)(GDExtensionConstTypePtr, void *)>pythonscript_gdextension_get_proc_address("callable_custom_get_user_data")
pythonscript_gdextension.classdb_construct_object = <GDExtensionObjectPtr (*)(GDExtensionConstStringNamePtr)>pythonscript_gdextension_get_proc_address("classdb_construct_object")
pythonscript_gdextension.classdb_get_method_bind = <GDExtensionMethodBindPtr (*)(GDExtensionConstStringNamePtr, GDExtensionConstStringNamePtr, GDExtensionInt)>pythonscript_gdextension_get_proc_address("classdb_get_method_bind")
pythonscript_gdextension.classdb_get_class_tag = <void *(*)(GDExtensionConstStringNamePtr)>pythonscript_gdextension_get_proc_address("classdb_get_class_tag")
pythonscript_gdextension.classdb_register_extension_class = <void (*)(GDExtensionClassLibraryPtr, GDExtensionConstStringNamePtr, GDExtensionConstStringNamePtr, const GDExtensionClassCreationInfo *)>pythonscript_gdextension_get_proc_address("classdb_register_extension_class")
pythonscript_gdextension.classdb_register_extension_class2 = <void (*)(GDExtensionClassLibraryPtr, GDExtensionConstStringNamePtr, GDExtensionConstStringNamePtr, const GDExtensionClassCreationInfo2 *)>pythonscript_gdextension_get_proc_address("classdb_register_extension_class2")
pythonscript_gdextension.classdb_register_extension_class_method = <void (*)(GDExtensionClassLibraryPtr, GDExtensionConstStringNamePtr, const GDExtensionClassMethodInfo *)>pythonscript_gdextension_get_proc_address("classdb_register_extension_class_method")
pythonscript_gdextension.classdb_register_extension_class_integer_constant = <void (*)(GDExtensionClassLibraryPtr, GDExtensionConstStringNamePtr, GDExtensionConstStringNamePtr, GDExtensionConstStringNamePtr, GDExtensionInt, GDExtensionBool)>pythonscript_gdextension_get_proc_address("classdb_register_extension_class_integer_constant")
pythonscript_gdextension.classdb_register_extension_class_property = <void (*)(GDExtensionClassLibraryPtr, GDExtensionConstStringNamePtr, const GDExtensionPropertyInfo *, GDExtensionConstStringNamePtr, GDExtensionConstStringNamePtr)>pythonscript_gdextension_get_proc_address("classdb_register_extension_class_property")
pythonscript_gdextension.classdb_register_extension_class_property_indexed = <void (*)(GDExtensionClassLibraryPtr, GDExtensionConstStringNamePtr, const GDExtensionPropertyInfo *, GDExtensionConstStringNamePtr, GDExtensionConstStringNamePtr, GDExtensionInt)>pythonscript_gdextension_get_proc_address("classdb_register_extension_class_property_indexed")
pythonscript_gdextension.classdb_register_extension_class_property_group = <void (*)(GDExtensionClassLibraryPtr, GDExtensionConstStringNamePtr, GDExtensionConstStringPtr, GDExtensionConstStringPtr)>pythonscript_gdextension_get_proc_address("classdb_register_extension_class_property_group")
pythonscript_gdextension.classdb_register_extension_class_property_subgroup = <void (*)(GDExtensionClassLibraryPtr, GDExtensionConstStringNamePtr, GDExtensionConstStringPtr, GDExtensionConstStringPtr)>pythonscript_gdextension_get_proc_address("classdb_register_extension_class_property_subgroup")
pythonscript_gdextension.classdb_register_extension_class_signal = <void (*)(GDExtensionClassLibraryPtr, GDExtensionConstStringNamePtr, GDExtensionConstStringNamePtr, const GDExtensionPropertyInfo *, GDExtensionInt)>pythonscript_gdextension_get_proc_address("classdb_register_extension_class_signal")
pythonscript_gdextension.classdb_unregister_extension_class = <void (*)(GDExtensionClassLibraryPtr, GDExtensionConstStringNamePtr)>pythonscript_gdextension_get_proc_address("classdb_unregister_extension_class")
pythonscript_gdextension.get_library_path = <void (*)(GDExtensionClassLibraryPtr, GDExtensionUninitializedStringPtr)>pythonscript_gdextension_get_proc_address("get_library_path")
pythonscript_gdextension.editor_add_plugin = <void (*)(GDExtensionConstStringNamePtr)>pythonscript_gdextension_get_proc_address("editor_add_plugin")
pythonscript_gdextension.editor_remove_plugin = <void (*)(GDExtensionConstStringNamePtr)>pythonscript_gdextension_get_proc_address("editor_remove_plugin")


##############################################################################
# Builtins methods function pointers                                         #
##############################################################################


# Variant stuff


cdef GDExtensionTypeFromVariantConstructorFunc gd_object_from_variant_ptr = \
    pythonscript_gdextension.get_variant_to_type_constructor(GDEXTENSION_VARIANT_TYPE_OBJECT)
cdef GDExtensionVariantFromTypeConstructorFunc gd_object_into_variant_ptr = \
    pythonscript_gdextension.get_variant_from_type_constructor(GDEXTENSION_VARIANT_TYPE_OBJECT)

cdef GDExtensionTypeFromVariantConstructorFunc gd_bool_from_variant_ptr = \
    pythonscript_gdextension.get_variant_to_type_constructor(GDEXTENSION_VARIANT_TYPE_BOOL)
cdef GDExtensionVariantFromTypeConstructorFunc gd_bool_into_variant_ptr = \
    pythonscript_gdextension.get_variant_from_type_constructor(GDEXTENSION_VARIANT_TYPE_BOOL)

cdef GDExtensionTypeFromVariantConstructorFunc gd_int_from_variant_ptr = \
    pythonscript_gdextension.get_variant_to_type_constructor(GDEXTENSION_VARIANT_TYPE_INT)
cdef GDExtensionVariantFromTypeConstructorFunc gd_int_into_variant_ptr = \
    pythonscript_gdextension.get_variant_from_type_constructor(GDEXTENSION_VARIANT_TYPE_INT)

cdef GDExtensionTypeFromVariantConstructorFunc gd_float_from_variant_ptr = \
    pythonscript_gdextension.get_variant_to_type_constructor(GDEXTENSION_VARIANT_TYPE_FLOAT)
cdef GDExtensionVariantFromTypeConstructorFunc gd_float_into_variant_ptr = \
    pythonscript_gdextension.get_variant_from_type_constructor(GDEXTENSION_VARIANT_TYPE_FLOAT)


# Builtins destructors
# (must be declared first given StringName's destructor is used above)


{% for builtin in api.builtins %}
{%   if not builtin.is_stack_only %}
cdef GDExtensionPtrDestructor {{ builtin.c_name_prefix }}_destructor_ptr = \
    pythonscript_gdextension.variant_get_ptr_destructor({{ builtin.variant_type_name }})
{%   endif %}
{% endfor %}
{% for builtin in api.builtins %}


# Builtin {{ builtin.original_name }}


{%   for c in builtin.constructors %}
cdef GDExtensionPtrConstructor {{ builtin.c_name_prefix }}_constructor_{{ c.index }}_ptr = \
    pythonscript_gdextension.variant_get_ptr_constructor({{ builtin.variant_type_name }}, {{ c.index }})
{%   endfor %}
{%   for m in builtin.methods %}
pythonscript_gdextension.string_name_new_with_utf8_chars(&_gdname, "{{ m.original_name }}")
cdef GDExtensionPtrBuiltInMethod {{ builtin.c_name_prefix }}_meth_{{ m.name }}_ptr = \
    pythonscript_gdextension.variant_get_ptr_builtin_method({{ builtin.variant_type_name }}, &_gdname, {{ m.hash }})
gd_string_name_destructor_ptr(&_gdname)
{%   endfor %}
{%   if builtin.indexing_return_type is not none and builtin.is_keyed %}
cdef GDExtensionPtrKeyedSetter {{ builtin.c_name_prefix }}_keyed_setter_ptr = \
    pythonscript_gdextension.variant_get_ptr_keyed_setter({{ builtin.variant_type_name }})
cdef GDExtensionPtrKeyedGetter {{ builtin.c_name_prefix }}_keyed_getter_ptr = \
    pythonscript_gdextension.variant_get_ptr_keyed_getter({{ builtin.variant_type_name }})
{%   endif %}
{%   if builtin.indexing_return_type is not none and not builtin.is_keyed %}
cdef GDExtensionPtrIndexedSetter {{ builtin.c_name_prefix }}_indexed_setter_ptr = \
    pythonscript_gdextension.variant_get_ptr_indexed_setter({{ builtin.variant_type_name }})
cdef GDExtensionPtrIndexedGetter {{ builtin.c_name_prefix }}_indexed_getter_ptr = \
    pythonscript_gdextension.variant_get_ptr_indexed_getter({{ builtin.variant_type_name }})
{%   endif %}
{%   for o in builtin.operators %}
{# TODO: make sure GDEXTENSION_VARIANT_TYPE_NIL also represents variant type #}
{%     if o.right_type is none or o.right_type.is_variant %}
cdef GDExtensionPtrOperatorEvaluator {{ builtin.c_name_prefix }}_op_{{ o.name }}_ptr = \
    pythonscript_gdextension.variant_get_ptr_operator_evaluator({{ o.variant_operator_name }}, {{ builtin.variant_type_name }}, GDEXTENSION_VARIANT_TYPE_NIL)
{%     else %}
cdef GDExtensionPtrOperatorEvaluator {{ builtin.c_name_prefix }}_op_{{ o.name }}_ptr = \
    pythonscript_gdextension.variant_get_ptr_operator_evaluator({{ o.variant_operator_name }}, {{ builtin.variant_type_name }}, {{ o.right_type.variant_type_name }})
{%     endif %}
{%   endfor %}
{%   for m in builtin.members %}
{%     if not m.is_in_struct %}
pythonscript_gdextension.string_name_new_with_utf8_chars(&_gdname, "{{ m.name }}")
cdef GDExtensionPtrSetter {{ builtin.c_name_prefix }}_get_{{ m.name }}_ptr = \
    pythonscript_gdextension.variant_get_ptr_setter({{ builtin.variant_type_name }}, &_gdname)
cdef GDExtensionPtrGetter {{ builtin.c_name_prefix }}_set_{{ m.name }}_ptr = \
    pythonscript_gdextension.variant_get_ptr_getter({{ builtin.variant_type_name }}, &_gdname)
gd_string_name_destructor_ptr(&_gdname)
{%     endif %}
{%   endfor %}
cdef GDExtensionTypeFromVariantConstructorFunc {{ builtin.c_name_prefix }}_from_variant_ptr = \
    pythonscript_gdextension.get_variant_to_type_constructor({{ builtin.variant_type_name }})
cdef GDExtensionVariantFromTypeConstructorFunc {{ builtin.c_name_prefix }}_into_variant_ptr = \
    pythonscript_gdextension.get_variant_from_type_constructor({{ builtin.variant_type_name }})
{% endfor %}


##############################################################################
# Utility functions function pointers                                        #
##############################################################################


{%   for utility in api.utility_functions %}
# {{ utility.original_name }}
pythonscript_gdextension.string_name_new_with_utf8_chars(&_gdname, "{{ utility.original_name }}")
cdef GDExtensionPtrUtilityFunction gd_utility_{{ utility.original_name }}_ptr = \
    pythonscript_gdextension.variant_get_ptr_utility_function(&_gdname, {{ utility.hash }})
gd_string_name_destructor_ptr(&_gdname)
{%   endfor %}
